(()=>{"use strict";const e={enableCaching:!0,maxCacheSize:20,audioChunkTimeout:1e4,maxRetries:3,retryDelay:1e3,useRequestBatching:!0,batchWindow:100,logPerformanceMetrics:!1};let t,o,r,s=e;const n=new class{constructor(e){this.cache=new Map,this.maxCacheSize=100,this.maxCacheAge=864e5,this.stats={hits:0,misses:0,size:0,lastCleanup:Date.now()},e?.maxSize&&(this.maxCacheSize=e.maxSize),e?.maxAge&&(this.maxCacheAge=e.maxAge),this.loadFromStorage(),console.log(`Audio cache initialized with max size: ${this.maxCacheSize}, max age: ${this.maxCacheAge/36e5} hours`)}generateKey(e,t,o){return`${t}_${o}_${this.hashText(e)}`}hashText(e){let t=0;for(let o=0;o<e.length;o++)t=(t<<5)-t+e.charCodeAt(o),t&=t;return t.toString(16)}get(e,t,o){const r=this.generateKey(e,t,o),s=this.cache.get(r);if(s){if(Date.now()-s.timestamp<=this.maxCacheAge)return this.stats.hits++,console.log(`Cache hit for text: ${e.substring(0,20)}...`),s.audioContent;this.cache.delete(r),this.stats.size=this.cache.size}return this.stats.misses++,console.log(`Cache miss for text: ${e.substring(0,20)}...`),null}set(e,t,o,r){const s=this.generateKey(e,t,o);this.cleanup(),this.cache.set(s,{audioContent:r,timestamp:Date.now(),voice:t,speed:o,textHash:this.hashText(e)}),this.stats.size=this.cache.size,console.log(`Cached audio for text: ${e.substring(0,20)}..., cache size: ${this.cache.size}`),this.saveToStorage()}cleanup(){if(Date.now()-this.stats.lastCleanup<36e5&&this.cache.size<this.maxCacheSize)return;if(console.log("Running cache cleanup..."),this.stats.lastCleanup=Date.now(),this.cache.size>=this.maxCacheSize){const e=Array.from(this.cache.entries()).sort(((e,t)=>e[1].timestamp-t[1].timestamp)),t=Math.max(1,Math.floor(.2*this.maxCacheSize));for(let o=0;o<t&&o<e.length;o++)this.cache.delete(e[o][0]);console.log(`Removed ${t} oldest items from cache`)}const e=Date.now();let t=0;for(const[o,r]of this.cache.entries())e-r.timestamp>this.maxCacheAge&&(this.cache.delete(o),t++);t>0&&console.log(`Removed ${t} expired items from cache`),this.stats.size=this.cache.size,this.saveToStorage()}saveToStorage(){const e=Array.from(this.cache.entries()).slice(0,50);chrome.storage.local.set({ttsAudioCache:e,ttsCacheStats:this.stats},(()=>{chrome.runtime.lastError?console.error("Failed to save cache to storage:",chrome.runtime.lastError):console.log(`Saved ${e.length} cache items to storage`)}))}loadFromStorage(){chrome.storage.local.get(["ttsAudioCache","ttsCacheStats"],(e=>{if(chrome.runtime.lastError)console.error("Failed to load cache from storage:",chrome.runtime.lastError);else{if(e.ttsAudioCache&&Array.isArray(e.ttsAudioCache)){for(const[t,o]of e.ttsAudioCache)this.cache.set(t,o);console.log(`Loaded ${this.cache.size} items from cache storage`)}e.ttsCacheStats&&(this.stats={...this.stats,...e.ttsCacheStats},console.log("Loaded cache stats:",this.stats)),this.stats.size=this.cache.size,this.cleanup()}}))}clear(){this.cache.clear(),this.stats.size=0,this.stats.hits=0,this.stats.misses=0,chrome.storage.local.remove(["ttsAudioCache","ttsCacheStats"],(()=>{console.log("Cache cleared from storage")}))}getStats(){return{...this.stats}}},a={"en-US":{commonWords:/\b(?:the|and|is|in|to|of|that|you|for|have|with|this|are|on|not|but|from|or|by|an|they|we|as)\b/gi,ngrams:["th","he","in","er","an","re","on","at","en","nd","ti","es","or","te","of","ed","is","it","al","ar"]},"en-GB":{commonWords:/\b(?:the|and|is|in|to|of|that|you|for|have|with|this|are|on|not|but|from|or|by|an|they|we|as)\b/gi,ngrams:["th","he","in","er","an","re","on","at","en","nd","ti","es","or","te","of","ed","is","it","al","ar"]},"es-ES":{commonWords:/\b(?:el|la|en|de|que|y|a|los|se|un|por|con|una|para|del|las|es|al|su|no|como|más)\b/gi,uniqueChars:/[áéíóúüñ¿¡]/g,ngrams:["de","en","er","es","la","el","ar","que","os","ent","ado","con","ion","est","ant"]},"fr-FR":{commonWords:/\b(?:le|la|les|des|en|et|est|que|un|une|du|dans|pour|par|sur|qui|ce|ne|pas|au|plus)\b/gi,uniqueChars:/[àâçéèêëîïôùûü]/g,ngrams:["es","le","de","en","re","on","nt","ou","an","ai","qu","ur","it","et","ment"]},"de-DE":{commonWords:/\b(?:der|die|das|in|und|zu|den|von|mit|auf|für|im|dem|nicht|ein|eine|ist|auch|sich)\b/gi,uniqueChars:/[äöüß]/g,ngrams:["en","er","ch","te","de","in","ge","ie","sch","und","ein","ich","den","ung","der"]},"it-IT":{commonWords:/\b(?:il|la|e|di|che|in|un|per|è|non|sono|una|con|del|si|come|da|questo|ma|se|io)\b/gi,uniqueChars:/[àèéìòù]/g,ngrams:["di","la","er","to","in","che","le","del","per","on","no","co","ta","un","ri"]},"pt-BR":{commonWords:/\b(?:de|a|o|que|e|do|da|em|um|para|com|não|uma|os|no|se|na|por|mais|as|dos)\b/gi,uniqueChars:/[áàâãçéêíóôõúü]/g,ngrams:["de","ra","es","os","ar","en","do","as","da","em","que","ent","nte","ndo","ado"]},"ja-JP":{commonWords:/[\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]/g},"zh-CN":{commonWords:/[\u4E00-\u9FFF]/g},"ko-KR":{commonWords:/[\uAC00-\uD7AF\u1100-\u11FF]/g},"ru-RU":{commonWords:/[\u0400-\u04FF]/g,ngrams:["то","ет","ен","ов","но","на","ст","ра","ни","ко","го"]},"ar-XA":{commonWords:/[\u0600-\u06FF]/g},"hi-IN":{commonWords:/[\u0900-\u097F]/g},"nl-NL":{commonWords:/\b(?:de|het|een|in|en|van|te|is|dat|op|zijn|met|voor|niet|aan|er|ook|als|maar)\b/gi,uniqueChars:/[àáäçèéêëìíïòóöùúü]/g,ngrams:["en","de","er","an","ee","in","ge","et","te","van","aan","oor","ijk","ing"]}};let i=[];function c(e,t={}){if(!i.length)return console.warn("No voices available in cache. Cannot find optimal voice."),null;const o=["Neural2","Studio","WaveNet","Standard"];let r=i.filter((t=>t.languageCode===e));if(0===r.length){const t=e.split("-")[0];r=i.filter((e=>e.languageCode.startsWith(t+"-")))}if(0===r.length)return null;if(t.gender){const e=r.filter((e=>e.gender===t.gender));e.length>0&&(r=e)}if(t.voiceType){const e=r.filter((e=>e.type===t.voiceType));e.length>0&&(r=e)}return r.sort(((e,t)=>{const r=o.indexOf(e.type),s=o.indexOf(t.type);return(-1===r?999:r)-(-1===s?999:s)})),r.length>0?r[0].name:null}function l(e,t,o){void 0!==t?e.message&&e.message.includes("Could not establish connection. Receiving end does not exist.")?console.log(`Failed to send tab message for action '${o}' to tab ${t}: Content script not listening or not injected.`):console.error(`Failed to send tab message for action '${o}' to tab ${t}:`,e):console.warn(`Attempted to send tab message for action '${o}' but tabId was undefined.`)}function d(e,t){chrome.runtime.sendMessage(e,(e=>{chrome.runtime.lastError?console.warn(`Error sending message for action '${t}':`,chrome.runtime.lastError.message):e?console.log(`Message for action '${t}' sent successfully. Response:`,e):console.warn(`No response received for action '${t}'.`)}))}let u=null,h="";const g=4800;let m=[],p=!1,f=0,y=0,b=0,v={speed:1,highlightType:"word",enableHighlight:!0};var w;w=e,s={...e,...w},t=new class{constructor(e){this.cache=new Map,this.maxSize=e}get(e){const t=this.cache.get(e);return t?(t.lastAccessed=Date.now(),t.data):null}set(e,t){if(this.cache.size>=this.maxSize){let e="",t=1/0;for(const[o,r]of this.cache.entries())r.lastAccessed<t&&(t=r.lastAccessed,e=o);e&&this.cache.delete(e)}this.cache.set(e,{data:t,lastAccessed:Date.now()})}clear(){this.cache.clear()}}(s.maxCacheSize),o=new class{constructor(){this.metrics={apiCalls:0,cacheHits:0,cacheMisses:0,apiErrors:0,retries:0,avgResponseTime:0,totalResponseTime:0},this.reset()}reset(){this.metrics={apiCalls:0,cacheHits:0,cacheMisses:0,apiErrors:0,retries:0,avgResponseTime:0,totalResponseTime:0}}recordApiCall(e){this.metrics.apiCalls++,this.metrics.totalResponseTime+=e,this.metrics.avgResponseTime=this.metrics.totalResponseTime/this.metrics.apiCalls}recordCacheHit(){this.metrics.cacheHits++}recordCacheMiss(){this.metrics.cacheMisses++}recordApiError(){this.metrics.apiErrors++}recordRetry(){this.metrics.retries++}getMetrics(){return{...this.metrics}}},r=new class{constructor(e){this.batchWindow=e,this.batchQueue=new Map}addRequest(e,t,o){const r=`${t}_${o}`;return new Promise(((s,n)=>{if(this.batchQueue.has(r)){const t=this.batchQueue.get(r);t.texts.push(e);const o=t.resolve;t.resolve=e=>{o(e),s(e)};const a=t.reject;t.reject=e=>{a(e),n(e)}}else{const a=window.setTimeout((()=>{this.processBatch(r)}),this.batchWindow);this.batchQueue.set(r,{texts:[e],voice:t,speed:o,resolve:s,reject:n,timer:a})}}))}processBatch(e){const t=this.batchQueue.get(e);t&&(clearTimeout(t.timer),this.batchQueue.delete(e))}clear(){for(const[e,t]of this.batchQueue.entries())clearTimeout(t.timer),t.reject(new Error("Batch cleared")),this.batchQueue.delete(e)}}(s.batchWindow),chrome.storage.local.get(["performanceConfig"],(e=>{e.performanceConfig&&(s={...s,...e.performanceConfig})}));let k=e;async function E(e,t,o){if(console.log("Preparing TTS processing for:",{text:e.substring(0,30)+(e.length>30?"...":""),voice:t,speed:o}),!h){const e="No Google Cloud API key provided. Please set it in the extension settings.";throw console.error(e),d({action:"ttsError",error:e},"ttsError"),new Error(e)}if(!e){const e="No text provided for TTS conversion";throw console.error(e),d({action:"ttsError",error:e},"ttsError"),new Error(e)}if(!t){const e="No voice selected for TTS conversion";throw console.error(e),d({action:"ttsError",error:e},"ttsError"),new Error(e)}console.log("Cache miss - sending request to Google TTS API");const r="https://texttospeech.googleapis.com/v1/text:synthesize?key="+h,s=t.includes("-")?t.split("-").slice(0,2).join("-"):"en-US";console.log(`Using language code: ${s}`);const n={input:{text:e},voice:{languageCode:s,name:t},audioConfig:{audioEncoding:"MP3",speakingRate:o}};console.log("Request data:",JSON.stringify(n,null,2));try{const e=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(console.log("Response received:",e.status,e.statusText),!e.ok){const t=await e.json();throw console.error("Google TTS API error details:",t),new Error(`Google TTS API error: ${t.error?.message||e.statusText}`)}const t=await e.json();if(console.log("Google TTS API response received successfully:",t),!t||"string"!=typeof t.audioContent)throw new Error("Invalid TTS API response: Missing or invalid audioContent");return t}catch(e){throw console.error("Error during Google TTS API request:",e),d({action:"ttsError",error:e.message||"Unknown error during TTS API request"},"ttsError"),e}}function C(e){if("undefined"==typeof Audio)throw console.error("Audio is not defined. Ensure this code runs in a browser environment."),new ReferenceError("Audio is not defined.");return new Audio(e)}function A(e){try{if(!e||!e.audioContent)throw new Error("Invalid TTS response: Missing audio content");const t=C(`data:audio/mp3;base64,${e.audioContent}`);return T(t),t}catch(e){console.error("Error creating audio from TTS response:",e),d({action:"ttsError",error:`Failed to create audio: ${e.message}`},"ttsError");const t=C("");return T(t),setTimeout((()=>{const o=new ErrorEvent("error",{message:`Failed to create audio: ${e.message}`,error:e});t.dispatchEvent(o)}),0),t}}function T(e){e.addEventListener("error",(t=>{if(console.error("Audio error:",t),e.error){console.error("Audio element error code:",e.error.code),console.error("Audio element error message:",e.error.message);let t="Unknown audio error";switch(e.error.code){case MediaError.MEDIA_ERR_ABORTED:t="Audio playback aborted by the user";break;case MediaError.MEDIA_ERR_NETWORK:t="Network error during audio loading";break;case MediaError.MEDIA_ERR_DECODE:t="Audio decoding error - the audio data may be corrupted";break;case MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:t="Audio format not supported by your browser"}d({action:"ttsError",error:`Audio error: ${t}`},"ttsError")}else d({action:"ttsError",error:"Unknown audio error occurred"},"ttsError")})),e.addEventListener("loadstart",(()=>console.log("Audio loading started"))),e.addEventListener("canplay",(()=>console.log("Audio can now begin playback"))),e.addEventListener("canplaythrough",(()=>console.log("Audio can play through without buffering"))),e.addEventListener("durationchange",(()=>console.log("Audio duration changed to:",e.duration))),e.addEventListener("play",(()=>console.log("Audio playback started"))),e.addEventListener("pause",(()=>console.log("Audio playback paused"))),e.addEventListener("ended",(()=>console.log("Audio playback ended")))}async function x(e,t,o,r=!1){if(console.log("Starting synthesis and playback with:",{text:e,voice:t,speed:o,autoDetectLanguage:r}),!e){const e="Missing text for synthesis";return console.error(e),void d({action:"ttsError",error:e},"ttsError")}if(!t&&!r){const e="No voice selected";return console.error(e),void d({action:"ttsError",error:e},"ttsError")}if(!h){const e="No API key provided. Please set your Google Cloud API key in the extension settings.";return console.error(e),void d({action:"ttsError",error:e},"ttsError")}try{if(r){d({action:"ttsInfo",info:"Detecting language..."},"ttsInfo");const o=await new Promise((e=>{chrome.storage.local.get(["voicePreferences"],(t=>{e(t.voicePreferences||{})}))})),r=await async function(e,t={}){const{languageCode:o,confidence:r}=function(e){if(!e||0===e.trim().length)return{languageCode:"en-US",confidence:0};const t=[],o=function(e,t=2){const o={},r=e.toLowerCase().replace(/[^a-z\u00C0-\u00FF\u0400-\u04FF\u0900-\u097F\u0600-\u06FF\u0370-\u03FF\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF\uAC00-\uD7AF]/gi," ");for(let e=0;e<=r.length-t;e++){const s=r.slice(e,e+t);s.includes(" ")||(o[s]=(o[s]||0)+1)}return o}(e,2);for(const[r,s]of Object.entries(a)){let n=0,a=0,i=0;const c=e.match(s.commonWords);if(c&&(n=c.length/(e.length/100)),s.uniqueChars){const t=e.match(s.uniqueChars);t&&(a=2*t.length)}if(s.ngrams){for(const e of s.ngrams)i+=o[e]||0;i/=e.length/100}const l=.4*n+.3*a+.3*i,d=10,u=Math.min(l/d,1);t.push({language:r,score:l,confidence:u})}return t.sort(((e,t)=>t.score-e.score)),console.log("Language detection scores:",t.slice(0,3)),t.length>0&&t[0].score>0&&(1===t.length||t[1].score<.7*t[0].score)?{languageCode:t[0].language,confidence:t[0].confidence}:{languageCode:"en-US",confidence:.2}}(e),s=c(o,t);let n=!1,i=s;return s||(console.warn(`No voice found for ${o}, falling back to en-US`),i=c("en-US",t),n=!0),{detectedLanguage:o,confidence:r,voice:i,fallbackUsed:n}}(e,{gender:o.gender,voiceType:o.voiceType});r.voice?(t=r.voice,d({action:"ttsInfo",info:`Detected language: ${r.detectedLanguage} (${Math.round(100*r.confidence)}% confidence)`},"ttsInfo"),r.fallbackUsed&&d({action:"ttsWarning",warning:`No voice available for detected language. Using ${t} instead.`},"ttsWarning")):(d({action:"ttsWarning",warning:"Could not detect language or find appropriate voice. Using default voice."},"ttsWarning"),t||(t="en-US-Neural2-A"))}P(),m=[],f=0,y=0,b=0,p=!0,console.log("Testing API key validity before full synthesis...");const s=e.length>100?e.substring(0,50):e;try{const e=await E(s,t,o);if(console.log("API key valid, response received for test text"),!e.audioContent){const e="No audio content received from Google TTS API.";return console.error(e),void d({action:"ttsError",error:e},"ttsError")}}catch(e){return}const n=function(e){const t=[],o=e.replace(/([.?!])\s*(?=[A-Z])/g,"$1|").split("|");let r="";for(const e of o)if(r.length+e.length>g)if(r&&t.push(r),e.length>g){const o=e.split(/\s+/);r="";for(const e of o)r.length+e.length+1>g?(t.push(r),r=e):r+=(r?" ":"")+e}else r=e;else r+=(r?" ":"")+e;return r&&t.push(r),t}(e);if(console.log(`Text split into ${n.length} chunks for processing`),0===n.length)return void d({action:"ttsError",error:"No valid text chunks to process"},"ttsError");v.enableHighlight&&await async function(){try{const e=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e[0]?.id)throw new Error("No active tab found to inject the script.");await chrome.scripting.executeScript({target:{tabId:e[0].id},files:["src/tts_highlight_content.js"]}),console.log("Highlight content script injected successfully.")}catch(e){console.error("Error injecting highlight content script:",e),d({action:"ttsError",error:`Failed to inject highlight script: ${e.message}`},"ttsError")}}();for(let e=0;e<n.length;e++)try{const r=n[e];d({action:"ttsProgress",currentChunk:e+1,totalChunks:n.length,text:r.substring(0,30)+(r.length>30?"...":"")},"ttsProgress");const s=A(await E(r,t,o));await new Promise((e=>{if(s.duration&&!isNaN(s.duration))return void e();const t=setTimeout((()=>{console.warn("Audio duration loading timed out, using estimate"),e()}),3e3);s.addEventListener("loadedmetadata",(()=>{clearTimeout(t),e()})),s.addEventListener("error",(()=>{clearTimeout(t),console.error("Error loading audio metadata"),e()}))}));const a=s.duration||.3*r.split(/\s+/).length/o;m.push({audio:s,text:r,startTime:y,endTime:y+a,isPlaying:!1}),y+=a}catch(t){console.error(`Error processing chunk ${e+1}:`,t)}m.length>0?(console.log(`Starting playback of ${m.length} audio chunks`),function(){if(0===m.length)return console.warn("Attempted to start playback with empty audio queue"),void d({action:"ttsWarning",warning:"No audio available to play"},"ttsWarning");p&&console.log("Playback already in progress, resetting to start"),p=!0,f=0,d({action:"playbackStarted",totalDuration:y,totalChunks:m.length},"playbackStarted"),S()}()):(console.error("No audio chunks were generated"),d({action:"ttsError",error:"Failed to generate any audio chunks. Please try again with different text or settings."},"ttsError"))}catch(e){console.error("Error during synthesis and playback:",e),d({action:"ttsError",error:e.message||"Unknown error during synthesis"},"ttsError")}}function S(){if(!p)return void console.log("Playback is not active, cannot play chunk");if(f>=m.length)return console.log("Reached end of audio queue, completing playback"),p=!1,d({action:"playbackComplete"},"playbackComplete"),void(v.enableHighlight&&chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]?.id&&chrome.tabs.sendMessage(e[0].id,{action:"clearHighlights"}).catch((t=>l(t,e[0]?.id,"clearHighlights")))})));const e=m[f];u=e.audio,u&&v.speed>0&&(u.playbackRate=v.speed),u?(u.onended=null,u.onerror=null,u.ontimeupdate=null,u.onended=()=>{console.log(`Chunk ${f+1}/${m.length} playback ended`),e.isPlaying=!1,f++,S()},u.onerror=t=>{console.error(`Error playing chunk ${f+1}:`,t),console.error("Audio error code:",u?.error?.code),d({action:"ttsWarning",warning:`Error playing audio chunk ${f+1}. Trying next chunk.`},"ttsWarning"),e.isPlaying=!1,f++,S()},u.ontimeupdate=()=>{u&&(b=e.startTime+u.currentTime,(!e.lastProgressUpdate||Date.now()-e.lastProgressUpdate>250)&&(d({action:"playbackProgress",currentTime:b,totalDuration:y,currentChunk:f,totalChunks:m.length},"playbackProgress"),e.lastProgressUpdate=Date.now()),v.enableHighlight&&function(e,t){const o=t.currentTime/(t.duration||1),r=e.text;if("word"===v.highlightType){const e=r.split(/\s+/),t=e[Math.min(Math.floor(o*e.length),e.length-1)];t&&chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]?.id&&chrome.tabs.sendMessage(e[0].id,{action:"highlightText",text:t,options:{type:"word",enabled:!0}}).catch((t=>l(t,e[0]?.id,"highlightText")))}))}else chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]?.id&&chrome.tabs.sendMessage(e[0].id,{action:"highlightText",text:r,options:{type:"sentence",enabled:!0}}).catch((t=>l(t,e[0]?.id,"highlightText")))}))}(e,u))},e.isPlaying=!0,async function(e){let t=0;for(;t<=3;)try{return t++,console.log(`Playing audio (attempt ${t}/4)`),await e.play(),void console.log("Audio playback started successfully")}catch(e){if(console.error(`Error playing audio (attempt ${t}/4):`,e),!(t<=3))throw e;{"NotAllowedError"===e.name&&(console.warn("Playback not allowed, might need user interaction first"),d({action:"ttsWarning",warning:"Audio playback requires user interaction. Please click the play button or refresh the page."},"ttsWarning"));const o=Math.min(1e3*t,3e3);console.log(`Waiting ${o}ms before retry...`),await new Promise((e=>setTimeout(e,o)))}}throw new Error("Max retry attempts reached")}(u).catch((e=>{console.error("Failed to play audio after retries:",e),d({action:"ttsError",error:"Failed to play audio: "+(e.message||"Unknown error")},"ttsError"),f++,S()}))):(console.error("Current audio is null for chunk:",f),f++,S())}function P(){p=!1,u&&(u.pause(),u.onended=null,u.onerror=null,u.ontimeupdate=null,u=null),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]?.id&&chrome.tabs.sendMessage(e[0].id,{action:"clearHighlights"}).catch((t=>l(t,e[0]?.id,"clearHighlights")))})),m=[],d({action:"playbackStopped"},"playbackStopped")}chrome.storage.local.get(["performanceConfig"],(e=>{e.performanceConfig?(k={...k,...e.performanceConfig},console.log("PerformanceConfig loaded from storage:",k)):console.warn("PerformanceConfig not found in storage. Using default configuration:",k)})),chrome.storage.local.get(["playbackSettings","googleApiKey"],(e=>{e.playbackSettings?(v={...v,...e.playbackSettings},console.log("Playback settings loaded:",v)):console.warn("Playback settings not found. Using defaults:",v),e.googleApiKey?(h=e.googleApiKey,console.log("Google API key loaded:",h),h&&setTimeout((()=>{(async function(e){if(!e)return!1;try{const t=`https://texttospeech.googleapis.com/v1/voices?key=${e}`;console.log("Sending test request to validate API key");const o=await fetch(t),r=o.ok;return r?(console.log("API key is valid"),d({action:"apiKeyValid"},"apiKeyValid")):(console.error("API key validation failed:",o.status,o.statusText),d({action:"apiKeyInvalid",error:`API key validation failed: ${o.status} ${o.statusText}`},"apiKeyInvalid")),r}catch(e){return console.error("Error validating API key:",e),d({action:"apiKeyInvalid",error:"Error validating API key. Check your network connection."},"apiKeyInvalid"),!1}})(h).then((e=>{console.log("API key validation result:",e)}))}),1e3)):console.warn("Google API key not found. Please set it in the extension settings.")})),void 0===k?(console.warn("PerformanceConfig is undefined. Using default configuration."),k=e):console.log("PerformanceConfig loaded:",k),chrome.runtime.onMessage.addListener(((e,t,o)=>{switch(e.action){case"apiKeyUpdated":e.newKey&&(h=e.newKey);break;case"readText":e.text&&e.voice&&void 0!==e.speed&&x(e.text,e.voice,e.speed);break;case"stopReading":P();break;case"pauseReading":u&&!u.paused&&(u.pause(),d({action:"playbackPaused"},"playbackPaused"));break;case"resumeReading":u&&u.paused&&(u.play().catch((e=>{console.error("Error resuming audio:",e),d({action:"ttsError",error:"Failed to resume playback."},"ttsError")})),d({action:"playbackResumed"},"playbackResumed"));break;case"nextChunk":p&&f<m.length-1&&(u&&u.pause(),f++,S());break;case"previousChunk":p&&f>0&&(u&&u.pause(),f--,S());break;case"jumpToChunk":void 0!==e.chunkIndex&&(s=e.chunkIndex,p&&s>=0&&s<m.length&&(u&&u.pause(),f=s,S()));break;case"updateSettings":e.settings&&(v={...v,...e.settings},u&&e.settings.speed&&(u.playbackRate=e.settings.speed));break;case"clearCache":n.clear(),console.log("Audio cache cleared"),d({action:"cacheStatsUpdated"},"cacheStatsUpdated"),o({success:!0});break;case"setAvailableVoices":e.voices&&Array.isArray(e.voices)?(r=e.voices,i=r,console.log(`Cached ${r.length} available voices for language detection`),o({success:!0})):o({success:!1,error:"Invalid voices data"});break;case"autoDetectLanguage":e.text&&(e.text&&void 0!==e.speed?(x(e.text,"",e.speed,!0),o({success:!0})):o({success:!1,error:"Missing required parameters"}));break;case"getPlaybackState":o({isPlaying:p&&u&&!u.paused,isPaused:p&&u&&u.paused,currentTime:b,totalDuration:y,currentChunk:f,totalChunks:m.length})}var r,s;return!0})),chrome.runtime.onMessage.addListener(((e,t,o)=>{"updateSpeed"===e.action&&void 0!==e.speed&&(v.speed=e.speed,u&&(u.playbackRate=v.speed),chrome.storage.local.set({playbackSettings:v}),o({success:!0}))})),chrome.contextMenus.create({id:"readSelection",title:"Read Selection with TTS",contexts:["selection"]}),chrome.contextMenus.onClicked.addListener(((e,t)=>{"readSelection"===e.menuItemId&&e.selectionText&&chrome.storage.local.get(["selectedVoice","playbackSettings","googleApiKey"],(o=>{const r=o.selectedVoice||"en-US-Neural2-A",s=o.playbackSettings?.speed||1;if(h=o.googleApiKey||"",!h)return console.warn("API key not found for context menu action. Please set it in options."),void chrome.notifications.create({type:"basic",iconUrl:chrome.runtime.getURL("images/icon48.svg"),title:"TTS Extension Error",message:"API key is missing. Please set it in the extension options to use Text-to-Speech.",priority:2},(e=>{chrome.runtime.lastError&&console.error("Notification creation failed:",chrome.runtime.lastError.message)}));t?.id&&e.selectionText&&x(e.selectionText,r,s).catch((e=>{console.error("Error during synthesizeAndPlay from context menu:",e),d({action:"ttsError",error:`Failed to read selection: ${e.message}`},"ttsError")}))}))})),chrome.runtime.onMessage.addListener(((e,t,o)=>{if("speakText"===e.action&&e.text)return async function(e,t,o){if(console.log("Preparing to send text to Google TTS API:",e),!h)return void console.error("API key is missing. Please set it in the extension settings.");const r="https://texttospeech.googleapis.com/v1/text:synthesize?key="+h,s={input:{text:e},voice:{languageCode:"en-US",name:t},audioConfig:{audioEncoding:"MP3",speakingRate:o}};try{const e=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(!e.ok)throw new Error(`Google TTS API error: ${e.statusText}`);const t=(await e.json()).audioContent;t?new Audio("data:audio/mp3;base64,"+t).play():console.error("No audio content received from Google TTS API.")}catch(e){console.error("Error using Google TTS API:",e)}}(e.text,e.voiceName||"",e.speed||1).then((()=>o({success:!0}))).catch((e=>o({success:!1,error:e.message}))),!0}))})();